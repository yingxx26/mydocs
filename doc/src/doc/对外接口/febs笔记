1,FebsSecurityConfigure(继承WebSecurityConfigurerAdapter)用于处理/oauth开头的请求，Spring Cloud OAuth内部定义的获取令牌，
  刷新令牌的请求地址都是以/oauth/开头的，也就是说FebsSecurityConfigure用于处理和令牌相关的请求。
2,FebsResourceServerConfigure(资源服务器@EnableResourceServer ,继承ResourceServerConfigurerAdapter)用于处理非/oauth/开头的请求，其主要用于资源的保护，
  客户端只能通过OAuth2协议发放的令牌来从资源服务器中获取受保护的资源。
这是因为当我们引入了spring-cloud-starter-oauth2依赖后，系统会暴露一组由/oauth开头的端点

3,认证服务器配置@EnableAuthorizationServer


六，社交登陆流程
 1，登录（跳转授权页面），若gitee本地有账号登陆，则直接生成授权码，去回调地址；若gitee本地没有登陆则去gitee登陆页面，登陆后生成授权码，再去回调地址
 2，获取授权码后回调（携带着授权码 authCallback.code），获取access_token，用access_token获取gitee用户信息。
 以上是gitee的oauth流程
   查看gitee用户信息是否在绑定表里，没有则提示绑定或注册后绑定，有则直接登陆自己的oauth流程，生成返回OAuth2AccessToken
 3, 若要绑定@PostMapping("bind/login")， 关联信息插入数据库，和直接登陆一样走一遍自己的oauth流程，生成返回OAuth2AccessToken
七，绑定流程
 1，登录（跳转授权页面），若gitee本地有账号登陆，则直接生成授权码，去回调地址；若gitee本地没有登陆则去gitee登陆页面，登陆后生成授权码，再去回调地址
 2，获取授权码后回调（携带着授权码 authCallback.code），获取access_token，用access_token获取gitee用户信息。
 3, 自动绑定@PostMapping("bind")，关联信息插入数据库，不需要oauth流程


 实现类	                         对应的授权模式
 AuthorizationCodeTokenGranter	 授权码模式
 ClientCredentialsTokenGranter	 客户端模式
 ImplicitTokenGranter	           implicit  模式
 RefreshTokenGranter	              刷新 token 模式
 ResourceOwnerPasswordTokenGranter	密码模式


 八，密码授权模式登陆
 1，访问/oauth/token之前， 首先basic认证（BasicAuthenticationFilter），通过clientid获取clientdetail
 2，然后访问 TokenEndpoint 的 /oauth/token，通过username获取UserDetails -》Authentication-》OAuth2AccessToken


记住我功能  认证成功 同时写入数据库和cookie
