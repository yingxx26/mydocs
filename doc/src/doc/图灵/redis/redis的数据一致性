Redis缓存和数据库不一致怎么解决
不管是先写MySQL数据库，再删除Redis缓存；还是先删除缓存，再写库，都有可能出现数据不一致的情况。

缓存和数据库一致性解决方案

第一种方案：采用延时双删策略（双淘汰策略）

   在写库前后都进行redis.del(key)操作，并且设定合理的超时时间。

   具体的步骤就是：

  1）先删除缓存

  2）再写数据库

  3）休眠（一定的时间）毫秒

  4）再次删除缓存

第二种方案：设置缓存过期时间

   给缓存设置过期时间，是保证最终一致性的解决方案。所有的写操作以数据库为准，只要到达缓存过期时间，则后面的读请求自然会从数据库中读取新值然后回填缓存。

  方案弊端

  结合双删策略+缓存超时设置，这样最差的情况就是在超时时间内数据存在不一致，而且又增加了写请求的耗时。

第三种方案：异步更新缓存(canal基于订阅binlog的同步机制)

  技术整体思路：

  MySQL binlog增量订阅消费+消息队列+增量数据更新到redis

  1）读Redis：热数据基本都在Redis

  2）写MySQL:增删改都是操作MySQL

  3）更新Redis数据：MySQ的数据操作binlog，来更新到Redis

  3.1）数据操作主要分为两大块：

  一个是全量(将全部数据一次写入到redis)

  一个是增量（实时更新）

  这里说的是增量,指的是mysql的update、insert、delate变更数据。

  3.2）读取binlog后分析 ，利用消息队列,推送更新各台的redis缓存数据。

  这样一旦MySQL中产生了新的写入、更新、删除等操作，就可以把binlog相关的消息推送至Redis，Redis再根据binlog中的记录，对Redis进行更新。

  其实这种机制，很类似MySQL的主从备份机制，因为MySQL的主备也是通过binlog来实现的数据一致性。


第4种方案： redisioon 读写锁
