
hashmap原理 concurrenthashmap1.7锁分段  1.8 红黑树
如果没有初始化就先调用initTable（）方法来进行初始化过程
如果没有hash冲突就直接CAS插入
如果还在进行扩容操作就先进行扩容
如果存在hash冲突，就加锁来保证线程安全，这里有两种情况，一种是链表形式就直接遍历到尾端插入，一种是红黑树就按照红黑树结构插入，
最后一个如果该链表的数量大于阈值8，就要先转换成黑红树的结构，break再一次进入循环

 currenthashmap  分段锁弱一致性（乐观锁cas）  get不加锁 final，violate

1.接口是公开的，里面不能有私有的方法或变量，是用于让别人使用的，而抽象类是可以有私有方法或私有变量的，
2.接口不包含构造方法，抽象类里可以包含构造方法。    
3.另外，实现接口的一定要实现接口里定义的所有方法，而实现抽象类可以有选择地重写需要用到的方法，一般的应用里，最顶级的是接口，然后是抽象类实现接口，最后才到具体类实现。
4.还有，接口可以实现多重继承，而一个类只能继承一个超类，但可以通过继承多个接口实现多重继承，接口还有标识（里面没有任何方法，如Remote接口）和数据共享（里面的变量全是常量）的作用.
5.如果是抽象类要实现接口，可以实现部分或者一个都不实现就行，要是具体类就必须实现所有的方法



泛型        把类型校验放到编译期，避免强制转换报错


Countdownlatch 避免zookeeper未启动，就调用客户端报错



jdk 动态代理 需要实现接口 ， 因为需要继承proxy，当时Java只能单继承，所以只能实现接口
cglib 重写子类 ，不能重写final




get post区别
GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。
GET参数通过URL传递，POST放在Request body中。


GET在浏览器回退时是无害的，而POST会再次提交请求。
GET产生的URL地址可以被Bookmark，而POST不可以。
GET请求会被浏览器主动cache，而POST不会，除非手动设置。
GET请求只能进行url编码，而POST支持多种编码方式。
GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。
GET请求在URL中传送的参数是有长度限制的，而POST么有。
对参数的数据类型，GET只接受ASCII字符，而POST没有限制。




段式管理程序，页式管理文件


用例图 :  接口
类图： 实体类
活动图 : 业务逻辑
顺序图 : 无异常逻辑
